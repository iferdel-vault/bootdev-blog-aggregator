// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0
// source: feedfollows.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createFeedFollow = `-- name: CreateFeedFollow :one
WITH cte AS 
(
	INSERT INTO feed_follows (id, created_at, updated_at, user_id, feed_id)
	VALUES (
		$1,
		$2,
		$3,
		$4,
		$5
	)
) SELECT (
	feed_follows.id,
	feed_follows.created_at,
	feed_follows.updated_at,
	feed_follows.user_id,
	feed_follows.feed_id,
	users.name,
	feeds.name
)
FROM feed_follows
	JOIN users ON feed_follows.user_id = users.id
	JOIN feeds ON feed_follows.feed_id = feeds.id
`

type CreateFeedFollowParams struct {
	ID        uuid.UUID
	CreatedAt time.Time
	UpdatedAt time.Time
	UserID    uuid.UUID
	FeedID    uuid.UUID
}

func (q *Queries) CreateFeedFollow(ctx context.Context, arg CreateFeedFollowParams) (interface{}, error) {
	row := q.db.QueryRowContext(ctx, createFeedFollow,
		arg.ID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.UserID,
		arg.FeedID,
	)
	var column_1 interface{}
	err := row.Scan(&column_1)
	return column_1, err
}
